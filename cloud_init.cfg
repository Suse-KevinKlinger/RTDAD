#cloud-config
# vim: syntax=yaml
#
# ***********************
# 	---- for more examples look at: ------
# ---> https://cloudinit.readthedocs.io/en/latest/topics/examples.html
# ******************************
#
# This is the configuration syntax that the write_files module
# will know how to understand. encoding can be given b64 or gzip or (gz+b64).
# The content will be decoded accordingly and then written to the path that is
# provided.
#
# Note: Content strings here are truncated for example purposes.

ssh_pwauth: True
chpasswd:
  list: |
    root:linux
  expire: False
disable_root: false
resize_rootfs: false
ssh_authorized_keys:
  - ${PUBLICKEY}

# cmds run after boot
runcmd:
  - loadkeys de
  - hostnamectl set-hostname "${HOSTNAME}"
  - 'hostnamectl set-hostname --transient ""'
  - 'systemctl stop network && 
     sed -i -e "s/DHCLIENT_SET_DEFAULT_ROUTE=.*/DHCLIENT_SET_DEFAULT_ROUTE=\"no\"/g" /etc/sysconfig/network/dhcp &&
     echo -e "BOOTPROTO=\"static\"\nIPADDR=\"${IPADDR}/22\"\nSTARTMODE=\"auto\"\n" >  /etc/sysconfig/network/ifcfg-eth0 && 
     echo -e "default 10.17.68.1 - -" > /etc/sysconfig/network/routes && 
     systemctl start network && 
     echo -e "search wdf.sap.corp\nnameserver 10.17.122.10\nnameserver 10.17.121.30" > /etc/resolv.conf && 
     ip addr flush dev eth0 && 
     echo -e "\nAdding IP to eth0:\n" >> /home/debug.txt && 
     ip a a "${IPADDR}/22" dev eth0 &>> /home/debug.txt  && 
     echo -e "\nAdding default route via eth0:\n" >> /home/debug.txt  && 
     ip r a default via 10.17.68.1 &>> /home/debug.txt'
  - dbus-uuidgen --ensure
  - systemd-machine-id-setup
  - systemctl restart systemd-journald
  - SUSEConnect -p sle-module-basesystem/15.2/x86_64
  - 'SUSEConnect --url "https://smtproxy.wdf.sap.corp"'
  - SUSEConnect -p sle-module-containers/15.2/x86_64
  - SUSEConnect -p sle-module-public-cloud/15.2/x86_64
  - zypper in -y docker less
  - 'zypper in -y salt-minion && echo "master: 10.17.69.30" > /etc/salt/minion && systemctl enable salt-minion --now'
  - sed -i -e "/^127.0.0.1.*/a 192.168.180.100 Harbor-Registry.example.com Harbor-Registry" /etc/hosts
  - sysctl -w net.ipv4.ip_forward=1
  - mkdir -p /root/.ssh
  - echo 'type=83' | sfdisk /dev/vdb
  - mkfs.xfs /dev/vdb1
  - mkdir /var/lib/docker && sleep 2
  - mount /dev/vdb1 /var/lib/docker
  - systemctl enable --now docker

final_message: "The system is now ready, after $UPTIME seconds"
